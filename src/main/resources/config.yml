# 
# ## Welcome in the UltraHardcore Reloaded configuration file ##
# 
# 
# About the "sound" configuration, the format is always the same:
# sound:
#     name:   The name of the sound. Names: see http://l.carrade.eu/bukkit-sounds . Set to "NONE" to disable.
#     volume: The volume of the sound. 1 is the normal volume. You can use a decimal value.
#     pitch:  The pitch of the sound.  1 is the normal pitch.  You can use a decimal value.
# 
# Warning: NEVER USE TABS in this file, always spaces, to indent.


# Available languages: en_US, fr_FR, pt_PT, pt_BR, cs_CZ, zh_CN.
# Empty value: system language.
lang: 



# If this is set to false, no metrics are collected for this plugin.
metrics: true



episodes:
    enabled: true
    
    # Format: "mm", "mm:ss" or "hh:mm:ss". If invalid, 20 minutes.
    # Don't remove the "quotes" (because of the commas)!
    length: "20:00"

    # A title is displayed when the episode changes.
    title: true



map:
    # The diameter of the map (not the radius!), in blocks.
    size: 4000
    # "squared" or "circular". Affects the WorldBorder pre-configuration, and the
    # wall generator used.
    shape: "squared"

    wall:
        height: 150
        block:
            # The replaceAir block will be placed where there where some transparent blocks or trees before.
            # The replaceSolid one, where there was an other kind of block.
            replaceAir: GLASS
            replaceSolid: BEDROCK

    border:
        # The world border manager. Can be:
        # - "vanilla", to use the vanilla world border; or
        # - "brettflan", to use the WorldBorder Bukkit plugin by Brettflan
        #   (http://dev.bukkit.org/bukkit-plugins/worldborder/).
        #
        # If the shape is "circular", fallbacks to "brettflan" as the vanilla world border don't
        # support circular borders. And if the WorldBorder plugin is not installed, fallbacks to
        # no border.
        motor: "vanilla"

        # The amount of blocks a player may safely be outside the border before taking damage.
        # Only for the vanilla world border. Ignored else.
        damagesBuffer: 5

        # The amount of damage a player takes when outside the border plus the border buffer.
        # The damages delt is calculated by multiplying this amount by the number of blocks behind the buffer.
        # Only for the vanilla world border. Ignored else.
        damagesAmount: 0.2

        # The warning distance that causes the screen to be tinted red when the player is within the specified
        # number of blocks from the border.
        # Only for the vanilla world border. Ignored else.
        warningDistance: 5


        # You can display the border size in the scoreboard; see `scoreboard.border`.


        # Automatic and progressive border shrinking.
        # Notice: if the border is circular, the WorldBorder Bukkit plugin by Brettflan (see above)
        # is REQUIRED. Without, the border shrinking will not work.
        shrinking:
            enabled: false

            # Formats: "mm", "mm:ss" or "hh:mm:ss".
            # With the default values, the border eats one block every 8 seconds on each side.
            startsAfter: "40:00"
            shrinksDuring: "2:00:00"
            diameterAfterShrink: 200


        # The delay between two warning messages sent to the players out of a future border 
        # (this warning is set using /uh border warning <futureDiameter>).
        warningInterval: 90  # seconds
    
    spawnPoints:
        # Don't generate the spawn points (with /uh spawns generate) above the water?
        dontGenerateAboveWater: true



daylightCycle:
    do: true
    time: 6000  # Initial time (or game time if the daylight cycle is disabled) in ticks. 6000 = noon.



scoreboard:
    title: Hamburglur's gonna win come at me Ispeedz
    
    # Scoreboard displayed on the left of the screen
    enabled: true
    episode: true
    players: true
    teams: false
    ownTeam:
        enabled: true                 # Displays the player's team in the scoreboard
        title:
            color: ""                 # The color of the title. If empty, the team color is used.
            useTeamName: false        # If true, the title is the team's name. Else, a generic title (« Your team »).
        content:
            displayHearts: true       # Displays hearts colored following the player's life (low = red, high = green)
            colorName: false          # Color the whole name, not only the heart, following the life. If disabled the name is white (alive) or gray (dead).
            strikeDeadPlayers: true  # Strike the dead players lines.
            loginState:
                italic: true          # Logged-out players are displayed in italic
                suffix: "\u27A5"      # This string is displayed after the name of logged-out players
            displayMetPlayersOnly:
                enabled: false               # If enabled, the sidebar will only contains players met at some time.
                displayedWhenCloserThan: 10  # If enabled, a teammate will be displayed to the reference player if he/she is closer that this amount of blocks to the player.
    border:
        displayed: true
        displayDiameter: true  # If true, displays the border diameter (ex. "2000 blocks wide"). Else, the min/max coordinates (ex. "-1000 +1000"). Ignored if the border is circular.
    kills: false
    timer: true
    freezeStatus: true
    
    # Health in the list of the players
    health: true



# Controls what is displayed in the tab list headers and footers.
# Tags:
# - {title}: contains the scoreboard title (key scoreboard.title).
# - {episodeText}: contains the localized “Episode x” text.
# - {playersText}: contains the localized “x players left” text.
# - {teamsText}: contains the localized “x teams left” text.
# - {episodeNumber}: contains the raw episode number (e.g. “2”).
# - {playersCount}: contains the raw alive players count (e.g. “18”).
# - {teamsCount}: contains the raw alive teams count (e.g. “6”).
# You can use color & formatting codes with either & or §.
# If you want, you can use "\n" to create a new line.
playersList:
    waitingTime:
        header: "{title}"
        footer: ""
    inGameTime:
        header: "{title}"
        footer: "§a{episodeText} §7- §a{playersText} §7- §a{teamsText}"



# Update the MOTD according to the current state of the game?
# This will overwrite the original MOTD.
motd:
    enabled: false
    
    # Display the name of the match ("scoreboard.title") in the first line of the MOTD?
    displayMatchName: true
    # This will be displayed before the match name (formatting...)
    matchNamePrefix: ""


# Teleport the players to the spawn point on login if the game is not started?
# Avoids the random spawn point of Minecraft, and teleports them back to
# there if they log out then in.
teleportToSpawnIfNotStarted: true



achievements:
    # When a player joins the game before the beginning of the game, his achievements are reset?
    resetAchievementsAtStartup: true
    
    # A player cannot award an achievement if the game is not started?
    disableAchievementsBeforeStart: true



statistics:    
    # A player cannot increment a statistic if the game is not started?
    disableStatisticsBeforeStart: true



before-start:
    inventory:
        # True to clear the inventory of the players before the beginning of the game.
        clear: true

        # True to prevent users from using their inventory when the game is not started.
        preventUsage: true

        # True to disable all the inventory points above for players with the uh.build permission.
        allowForBuilders: true

    teamSelector:
        # True to give to the players a team selector, opening the teams inventory GUI (same as /teams).
        enabled: true

        # The item to use as the team selector. Right-clicking it will open the GUI.
        item: NETHER_STAR

    # Displays the current team in the action bar before the game. Nothing is displayed if the player is
    # not in a team.
    teamInActionBar: true

    enablePVP: true


start:
    slow:
        delayBetweenTP: 3  # in seconds
        broadcastProgress: true  # Displays something like « Teleporting... (14/28) » in the action bar for every player.

       
    sound:
        name: NONE
        volume: 1
        pitch: 1

    # Display a title to everyone when the game begins
    displayTitle: true

    # Damages are enabled after this amount of time.
    # Cannot be less than 15 seconds, to avoid initial-fall-related problems.
    # Format: "mm", "mm:ss", "hh:mm:ss"
    gracePeriod: "00:30"

    # If true, a message will be broadcasted when the grace period ends.
    broadcastGraceEnd: true

    # PVP is enabled after this amount of time.
    # If 0, enabled immediately.
    # Format: "mm", "mm:ss", "hh:mm:ss"
    peacePeriod: 00:15:00

    # The hostile mobs will not be allowed to spawn on the surface during this amount of time after
    # the beginning of the game. This prevents mobs from lightning errors to cause deaths during the
    # early game, when players just started and are not protected.
    # This option is here to prevent lightning-bugs-related deaths or damages, so spawns on surface
    # areas normally dark (like overhangs or floating islands) are not cancelled. Also, mobs will
    # still spawn on caves.
    # Format: "mm", "mm:ss", "hh:mm:ss". To disable, set to 0.
    surfaceMobsFreePeriod: "15:00"



death:
    messages:
        notifyIfTeamHasFallen: true
        deathMessagesFormat: "§6"  # Use this to increase visibility of death messages.
        teamDeathMessagesFormat: "§6"
        
    kick:
        do: false
        time: 30
        allow-reconnect: true
        
    head:
        drop: true
        pvpOnly: false
        
    give-xp-to-killer:
        levels: 3  # set to 0 to disable
        onlyOtherTeam: true  # Give XP only if the player kills a player from another team?
        
    announcements:
        lightning-strike: true
        
        sound:
            name: WITHER_SPAWN
            volume: 1
            pitch: 1



# If true, the name of the players will be colorized according to the teams.
colorizeChat: true



gameplay-changes:
    naturalRegeneration: false  # If true, the health will regenerate with food (just like in the default vanilla game).

    weather: false  # If false, the "bad" weather (rain, thunder) is disabled.
    
    replaceGhastTearsWithGold: true
    craftGoldenMelonWithGoldBlock: true
    
    craftGoldenAppleFromHead:
        fromHuman:
            do: true
            numberCrafted: 1
            addLore: true
            craftNotchApple: false
        fromWither:
            do: false
            numberCrafted: 1
            addLore: true
            craftNotchApple: false
    
    goldenApple:
        regeneration:
            # Half-hearts regenerated by one apple. Vanilla: normal 4, notch 180 (yes, 180).
            normal: 2
            notch: 180
            fromNormalHead: 4
            fromNotchHead: 180
        
        disableNotchApples: true
    
    disableEnderpearlsDamages: true
    
    disableLevelIIPotions: true
    
    witch:
        disableNaturalSpawn: true
        disableLightningSpawn: false  # from a villager

    rabbit:
        killerRabbitSpawn: false
        # When a rabbit spawns, it will be transformed into a Killer Rabbit following
        # this probability (between 0 and 1).
        killerRabbitSpawnProbability: 0.05
        # The rabbit will be named after this configuration point, except if empty - then, the
        # default vanilla name will be used ("The Killer Bunny").
        killerRabbitName: "The Killer Rabbit of Caerbannog"
    
    
    # If true a compass will show the nearest player, and the craft will be different.
    # Else, the craft will be standard and the compass will show the spawn point of the team/player (not the world spawn point).
    compass:
        enabled: false
        
        # The special recipe is with an ingredient in the center, and then,
        # from the top, clockwise: iron, spider eye, iron, rotten flesh, iron, bone, iron, gunpowder.
        # This field change the central ingredient.
        # "easy": redstone (like the normal compass).
        # "medium": ender pearl.
        # "hard": eye of ender.
        recipe: "medium"



teams-options:
    canSeeFriendlyInvisibles: false
    allowFriendlyFire: false
    
    # 0 = unlimited.
    maxPlayersPerTeam: 2
    
    # Randoms colors for solo games and solo teams (i.e. all the teams generated when the game starts)?
    # If false, no color (aka white) used.
    randomColors: true

    # Chat-based GUI to choose a team
    gui:
        # Display the players in each team, in the tooltip linked to the players count?
        displayPlayersInTeams: true
        
        # Display the GUI when a player login out of any team?
        autoDisplay: true
        # Delay between the login and the display? (Seconds)
        delay: 4

   
    teamChat:
        # Forces disable the team-chat when the player die.
        # If you use SpectatorPlus with the block-commands option enabled, this will prevent spectators
        # from using the team chat.
        disableLockOnDeath: true
        
        # Log the private team-chat in the console?
        log: false



hardcore-hearts:
    # Display hardcore hearts instead of normal ones?
    display: false
    
    # If a player die, his client will display an hardcore Game Over screen, without a « Respawn » button.
    # But the player CAN respawn, by clicking « Leave server » and then, on the confirmation screen,
    # « Respawn ».
    # With this option enabled, a short message will notify the player about that.
    # Notice: this will be disabled even with this set to true if the hardcore hearts are not enabled (useless).
    respawnMessage: false



# Automatically respawn the player after his death.
# Avoid the interrogation about the ability to respawn, if hardcore hearts are enabled.
auto-respawn:
    do: true
    delay: 6  # seconds



# Controls the behavior of the /uh finish command
finish:
    auto:
        do: true  # Execute /uh finish automatically a few seconds after the final death?
        timeAfterLastDeath: 1  # The command will be executed this amount of seconds after the last death.
    
    message: true  # If true, the name of the winner(s) will be broadcasted.
    title: true    # If true, a title will display the winner(s) of the game.

    fireworks:
        enabled: true  # If true, some fireworks will be launched at the location of the winners.
        duration: 5   # In seconds.
        areaSize: 6    # The size of the square, centered on each player, where the fireworks will be launched.



dynmap:
    showSpawnLocations: false
    showDeathLocations: false



# Enable spectator mode for player joining the game after the beginning
# (only for out-of-the-UHC players of course)?
spectatorModeWhenNewPlayerJoinAfterStart: true



# Rules are a way to display rules & other informations to the players.
# The content is completly up to you, formatting included (using standard
# formatting codes with either § or &). It will be displayed as a list to
# the players (one bullet per line in the `rules.rules` entry).
# Empty entries (« - "" ») are replaced by a completly blank line, if you
# need a separator.
rules:
    display:
        onJoin: false
        onStart: true
    rules:
        -



# Execute commands during the game or after the end of it, and after a configurable delay?
# Format explained below.
# Respect the spaces before the keywords ("exec" and "delay" need to be aligned).
commands:
    # Commands executed when the server starts.
    # These commands are also executed when the server is reloaded.
    execute-server-start:
       #- exec: command args
       #  delay: "40:00" (format: "mm", "mm:ss" or "hh:mm:ss". If invalid or not present, 0 seconds.)
       - 
    
    # Commands executed after the beginning of the game.
    # (The moment when /uh start or /uh start slow go is executed.)
    execute-start:
       -"/uhc start"
       -"/uhc begin"
    
    # Commands executed after the end of the game.
    # (After the last kill, when only one team is left.)
    execute-end: 
       -"/uhc end" 
       -"/uhc finish"


protips:
    sound:
        name: NOTE_PLING
        volume: 2
        pitch: 3
    
    teamchat:
        useTCommand: true  # Protip: team-chat command
        lock: true         # Protip: can lock the team-chat
        useGCommand: true  # Protip: global-chat command
        
    crafts:
        goldenHead: true        # ProTip: craft of golden apples with an head
        compassEasy: false      # Protip: "easy" compass craft
        compassMedium: false     # Protip: "medium" compass craft
        compassHard: false       # Protip: "hard" compass craft
        glisteringMelon: false   # Protip: glistering melon crafted with a gold block
        noEnchGoldenApple: false  # Protip: enchanted golden apple disabled
    
    start:
        invincibility: true  # Protip: 30 seconds (25 after the message) of invincibility.



# Use this to set the spawnpoints of the teams (or the players)
# You can also use the command `/uh spawns add` to add temporary spawn points,
# and `/uh spawns generate` to automatically generate them. (See `/uh spawns` for documentation.)
# (The spawn points added through `/uh spawns` are deleted when the server is stopped.)
#
# Format:
#     - x,z
#     - x,z
#     - etc.

spawnpoints:
    -



# Use this to pre-register the teams.
# Format:
#     - color
#  -- OR --
#     - color,name

teams:
    -
